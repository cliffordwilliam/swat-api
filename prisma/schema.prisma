// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  role     Role   @default(KARYAWAN)
}

enum Role {
  ADMIN
  KARYAWAN
}

model Order {
  id             String         @id @default(uuid())
  tanggalOrder   DateTime
  pembeli        Pembeli        @relation(fields: [pembeliId], references: [id])
  pembeliId      String
  orderItems     OrderItem[]
  tanggalKirim   DateTime
  namaPenerima   String
  alamatPenerima String
  noHpPenerima   String
  jamKirim       String
  totalPembelian Float          @default(0)
  pickupDelivery PickupDelivery
  ongkir         Float          @default(0)
  grandTotal     Float          @default(0)
  pembayaran     Pembayaran
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

enum PickupDelivery {
  PICKUP
  DELIVERY
  GOJEK
  CITYTRAN
  PAXEL
  DAYTRANS
  BARAYA
  LINTAS
  BINEKA
  JNE
}

enum Pembayaran {
  TUNAI
  KARTU_KREDIT
  QR
  TRANSFER
}

model Pembeli {
  id        String   @id @default(uuid())
  orders    Order[]
  nama      String
  alamat    String
  noHp      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id        String      @id @default(uuid())
  orders    OrderItem[]
  nama      String
  sizes     String
  harga     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id      String @id @default(uuid())
  order   Order  @relation(fields: [orderId], references: [id])
  orderId String
  item    Item   @relation(fields: [itemId], references: [id])
  itemId  String

  @@index([orderId, itemId])
}
